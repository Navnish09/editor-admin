{"version":3,"file":"static/js/453.73cec81d.chunk.js","mappings":"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","sources":["components/Animate/Animate.tsx","components/Modal/Modal.tsx","components/TableComponent/components/TableBody.tsx","components/TableComponent/components/TableHead.tsx","components/TableComponent/components/TableInfo.tsx","components/TableComponent/TableComponent.tsx","configs/apiConfigs.ts","components/Form/Form.tsx","data/validationSchemas.ts","apis/questionApis.ts","views/Questions/CreateQuestion.tsx","views/Questions/Actions/DeleteQuestionAction.tsx","views/Questions/Questions.tsx","views/Questions/index.ts"],"sourcesContent":["import { useEffect, useState, PropsWithChildren } from \"react\";\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  animateIn?: string;\r\n  animateOut?: string;\r\n}\r\n\r\nexport const Animate = ({ show, children, animateIn = \"fadeIn\", animateOut = \"fadeOut\" }: PropsWithChildren<Props>) => {\r\n  const [render, setRender] = useState(false);\r\n\r\n  useEffect(() => {\r\n    show && setRender(show);\r\n  }, [show]);\r\n\r\n  const handleAnimationEnd = () => {\r\n    !show && setRender(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {render && (\r\n        <div className={!show ? animateOut : animateIn} onAnimationEnd={handleAnimationEnd}>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { ModalProps } from \"./models\";\r\n\r\nexport const ModalComponent = ({\r\n  isOpen,\r\n  content,\r\n  title,\r\n  footerButtons,\r\n  toggleModal,\r\n  size = \"md\"\r\n}: ModalProps) => {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={isOpen} toggle={toggleModal} size={size} keyboard unmountOnClose>\r\n        {\r\n          title && (\r\n            <ModalHeader toggle={toggleModal}>{title}</ModalHeader>\r\n          )\r\n        }\r\n\r\n        <ModalBody>\r\n          {content}\r\n        </ModalBody>\r\n\r\n        {\r\n          footerButtons && (\r\n            <ModalFooter>\r\n              {\r\n                footerButtons?.map((button) => (\r\n                  <Button color={button.type} onClick={button.onClick}>\r\n                    {button.text}\r\n                  </Button>\r\n                ))\r\n              }\r\n            </ModalFooter>\r\n          )\r\n        }\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Props } from \"../models\";\r\n\r\n// Component for rendering the table body\r\nexport const TableBody = ({ data, columns, templates }: Props) => {\r\n  return (\r\n    <tbody>\r\n      {data.map((tdata, index) => {\r\n        const columnKeys = columns.map((column) => column.accessor);\r\n\r\n        return (\r\n          <tr key={index} className=\"border-top\">\r\n            {columnKeys.map((column, tdIndex) => {\r\n\r\n              return (\r\n                <td\r\n                  key={`${tdIndex}-${column}`} className=\"align-middle\"\r\n                  style={{\r\n                    width: columns[tdIndex].width,\r\n                    ...columns[tdIndex].grow ? { flexGrow: 1 } : {},\r\n                  }}>\r\n                  {\r\n                    // Render the cell content or template,Even empty, if it is available in the columns list\r\n                    (tdata[column] || templates?.[column]) ? (\r\n                      templates?.[column]?.({ ...tdata, index }) || tdata[column]\r\n                    ) : null\r\n                  }\r\n                </td>\r\n              )\r\n            })}\r\n          </tr>\r\n        )\r\n      })}\r\n    </tbody>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Column } from \"../models\"\r\n\r\n// Component for rendering the table head\r\nexport const TableHead = ({ columns }: { columns: Column[] }) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {columns.map((column, index) => (\r\n          <th\r\n            style={{\r\n              width: column.width || \"auto\",\r\n              ...column.grow ? { flexGrow: 1 } : {},\r\n            }}\r\n            key={`${index}-${column.accessor}`}\r\n            className=\"border-0 font-medium\">\r\n            {column.Header}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  )\r\n}","import React from \"react\";\r\nimport { CardSubtitle, CardTitle } from \"reactstrap\"\r\nimport { Info } from \"../models\"\r\n\r\nexport const TableInfo = ({ title, subtitle }: Info) => {\r\n  return (\r\n    <>\r\n      {title && <CardTitle tag=\"h5\">{title}</CardTitle>}\r\n      {\r\n        subtitle && (\r\n          <CardSubtitle className=\"mb-2 text-muted\" style={{fontSize : '0.9rem'}} tag=\"p\">{subtitle}</CardSubtitle>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport { Card, CardBody, Spinner, Table } from \"reactstrap\";\r\nimport { TableBody, TableHead, TableInfo } from \"./components\";\r\nimport { Props } from \"./models\";\r\n\r\nconst TableLoader = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <Spinner color=\"secondary\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const TableComponent = ({ columns, data, templates, configs, loading }: Props) => {\r\n  const isInfoAvailable = configs?.title || configs?.subtitle;\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <TableInfo title={configs?.title || \"\"} subtitle={configs?.subtitle || \"\"} />\r\n\r\n        <Table className={`no-wrap ${isInfoAvailable ? `mt-3` : `mb-0`} align-middle`} responsive borderless hover >\r\n          \r\n          {!loading ? (\r\n            <>\r\n              <TableHead columns={columns} />\r\n              <TableBody {...{ data, columns, templates, loading }} />\r\n            </>\r\n          ) : <TableLoader />}\r\n          \r\n        </Table>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","\r\n// Function to build the API URL\r\nexport const createAPIUrl = (endpoint: string) => {\r\n  return `${process.env.REACT_APP_API_DOMAIN}${endpoint}`;\r\n}","import React, { ChangeEvent, ForwardedRef, forwardRef, useEffect, useImperativeHandle } from \"react\"\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { FormProps, FormRef, Option } from \"./model\";\r\n\r\nexport const Form = forwardRef(({\r\n  configs,\r\n  validationSchemas,\r\n  defaultValues,\r\n  onInputChange,\r\n  onValidationChange,\r\n}: FormProps, ref: ForwardedRef<FormRef>) => {\r\n\r\n  const { fields, id } = configs;\r\n  const formDefaultValues = defaultValues || fields.reduce((acc, input) => {\r\n    acc[input.name] = \"\";\r\n    return acc;\r\n  }, {} as { [key: string]: string });\r\n\r\n  const { formState: { errors, isValid }, control, getValues, handleSubmit, reset } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: formDefaultValues\r\n  });\r\n\r\n  // Expose the events and values to the parent component\r\n  useImperativeHandle(ref, () => ({\r\n    getValues,\r\n    handleSubmit: (callback) => handleSubmit(callback)(),\r\n    reset\r\n  }), [getValues, handleSubmit]);\r\n\r\n  // Expose the validation state to the parent component\r\n  useEffect(() => {\r\n    onValidationChange?.(isValid);\r\n  }, [isValid]);\r\n\r\n  return (\r\n    <div id={id}>\r\n      {\r\n        fields.map(({ label, name, type, ...inputRest }: any) => {\r\n          return (\r\n            <FormGroup key={name}>\r\n              <Label for={name}>\r\n                {label} {\r\n                  validationSchemas[name]?.required ? (\r\n                    <span className=\"text-danger fw-bold\">*</span>\r\n                  ) : \"\"}</Label>\r\n              <Controller\r\n                name={name}\r\n                control={control}\r\n                rules={validationSchemas[name as keyof typeof validationSchemas]}\r\n                render={({ field: { ref, onChange, ...restControls } }) => {\r\n                  return (\r\n                    <Input\r\n                      id={name}\r\n                      innerRef={ref}\r\n                      type={type || \"text\"}\r\n                      invalid={!!errors[name]}\r\n                      valid={!!getValues()[name] && !errors[name]}\r\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                        onChange(e);\r\n                        onInputChange?.(e);\r\n                      }}\r\n\r\n                      {...inputRest}\r\n                      {...restControls} >\r\n\r\n                      {\r\n                        type === \"select\" ? inputRest.options?.map((option: Option) => (\r\n                          <option key={option.id} value={option.value}>{option.label}</option>\r\n                        )) : null\r\n                      }\r\n                    </Input>\r\n                  )\r\n                }}\r\n              />\r\n              <FormFeedback>\r\n                {`${errors[name]?.message}`}\r\n              </FormFeedback>\r\n            </FormGroup>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Form","export const CreateQuestionSchema = {\r\n  question: {\r\n    required: \"You forgot to add a question\",\r\n  },\r\n  description: {},\r\n  dueDate : {\r\n    required: \"You forgot to add a due date\",\r\n  },\r\n  language: {\r\n    required: \"You forgot to add a default language\",\r\n  },\r\n}","import { Question } from \"views/Questions/models\";\r\nimport { createAPIUrl } from \"../configs/apiConfigs\";\r\nimport apiUrls from \"../configs/apiRoutes.json\";\r\n\r\nconst questionEndpoints = apiUrls.questions;\r\n\r\n/**\r\n * Get all questions\r\n * @returns - Promise of Question[]\r\n **/\r\nexport const getQuestions = async () => {\r\n  const getQuestionApi = createAPIUrl(questionEndpoints.getQuestions);\r\n  const response = await fetch(getQuestionApi);\r\n  return await response.json();\r\n}\r\n\r\n\r\n/**\r\n * Create a new question\r\n * @param params - Question object\r\n * @returns - Promise of Question object\r\n */\r\nexport const createQuestion = async ({\r\n  question,\r\n  description,\r\n  dueDate,\r\n  language,\r\n}: Question) => {\r\n  const createQuestionApi = createAPIUrl(questionEndpoints.createQuestion);\r\n  const response = await fetch(createQuestionApi, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ question, description, dueDate, language }),\r\n  });\r\n\r\n  return response.json();\r\n}\r\n\r\n\r\nexport const deleteQuestion = async (id: string) => {\r\n  const deleteQuestionApi = createAPIUrl(questionEndpoints.deleteQuestion);\r\n  const response = await fetch(`${deleteQuestionApi}?id=${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n\r\n  return response.json();\r\n}","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Button } from \"reactstrap\";\r\n\r\nimport produce from \"immer\";\r\n\r\nimport languages from \"data/languageOptions.json\";\r\nimport { CreateQuestionSchema } from \"data/validationSchemas\";\r\nimport createQuestionForm from \"data/createQuestionForm.json\";\r\nimport { Form, FormRef, Field } from \"components\";\r\nimport { Question } from \"./models\";\r\nimport { createQuestion } from \"apis/questionApis\";\r\nimport { STATIC_CONTENT } from \"configs/constants\";\r\n\r\ntype Props = {\r\n  onCreated: () => void\r\n}\r\n\r\nexport const CreateQuestion = ({ onCreated }: Props) => {\r\n  const [isValid, setIsValid] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [questionId, setQuestionId] = useState<string>(\"\");\r\n\r\n  const formRef = useRef<FormRef>(null);\r\n\r\n\r\n  // Add options to language field\r\n  const configs = produce(createQuestionForm, (draft) => {\r\n    draft.fields.map((field: Field) => {\r\n      if (field.name === \"language\") {\r\n        field.options = languages;\r\n      }\r\n      return field;\r\n    });\r\n  })\r\n\r\n\r\n  const addQuestion = () => {\r\n    setLoading(true);\r\n    formRef.current?.handleSubmit(async (data: Question) => {\r\n      try {\r\n        const res = await createQuestion(data);\r\n        setQuestionId(res._id);\r\n\r\n        // Reset form after successful submission\r\n        formRef.current?.reset();\r\n        onCreated();\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      {\r\n        questionId && (\r\n          <Alert color=\"success\">\r\n            {`${STATIC_CONTENT.question_created} :\r\n            ${process.env.REACT_APP_EDITOR_BASE_URL}/${questionId}`}\r\n          </Alert>\r\n        )\r\n      }\r\n\r\n      <Form\r\n        configs={configs}\r\n        validationSchemas={CreateQuestionSchema}\r\n        ref={formRef}\r\n        onValidationChange={setIsValid}\r\n      />\r\n\r\n      <div className=\"d-flex justify-content-end mt-5\">\r\n        <Button disabled={!isValid || loading} color={isValid ? \"success\" : \"secondary\"} onClick={addQuestion}>\r\n          {!loading ? \"Create\" : \"Creating...\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateQuestion;","import { deleteQuestion } from \"apis/questionApis\"\r\nimport React from \"react\"\r\nimport { Question } from \"../models\";\r\n\r\ntype Props = {\r\n  row: Question,\r\n  onDelete: () => void\r\n}\r\n\r\nexport const DeleteQuestionAction = ({ row, onDelete }: Props) => {\r\n  \r\n  const handleDelete = async () => {\r\n    try {\r\n      row._id && await deleteQuestion(row._id);\r\n      onDelete();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center\">\r\n      <span className=\"text-danger delete-Icon\" onClick={handleDelete}>\r\n        <i className=\"bi bi-trash3\"></i>\r\n      </span>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport { Animate, ModalComponent, TableComponent } from \"components\";\r\nimport { STATIC_CONTENT } from \"../../configs/constants\";\r\nimport questionTableConfigs from \"../../data/questionsTableConfigs.json\";\r\nimport CreateQuestion from \"./CreateQuestion\";\r\nimport { getQuestions } from \"apis/questionApis\";\r\nimport { DeleteQuestionAction as DeleteAction } from \"./Actions/DeleteQuestionAction\";\r\nimport { Question } from \"./models\";\r\n\r\nexport const Questions = () => {\r\n  const { columns, configs } = questionTableConfigs\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refetch, setRefetch] = useState(false)\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const templates = {\r\n    actions: (row: Question) => <DeleteAction row={row} onDelete={() => setRefetch(prev => !prev)} />\r\n  }\r\n\r\n  useEffect(() => {\r\n    // fetch questions\r\n    const fetchQuestions = async () => {\r\n      setLoading(true);\r\n      const res = await getQuestions();\r\n\r\n      setData(res);\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchQuestions();\r\n  }, [refetch]);\r\n\r\n  return (\r\n    <Animate show>\r\n      <ModalComponent\r\n        isOpen={isOpen}\r\n        size=\"lg\"\r\n        toggleModal={() => setIsOpen(prev => !prev)}\r\n        title={STATIC_CONTENT.create_new_question}\r\n        content={<CreateQuestion onCreated={() => setRefetch(prev=>!prev)} />}\r\n      />\r\n\r\n      <div className=\"d-flex flex-row justify-content-between align-items-center mb-3\">\r\n        <h5>{STATIC_CONTENT.all_questions}</h5>\r\n\r\n        <Button color=\"primary\" prefix={\"sas\"} onClick={() => setIsOpen(true)}>\r\n          <i className=\"bi bi-plus\"></i> {STATIC_CONTENT.create_question}\r\n        </Button>\r\n      </div>\r\n\r\n      <TableComponent\r\n        {...{\r\n          columns,\r\n          configs,\r\n          data,\r\n          templates,\r\n          loading\r\n        }}\r\n      />\r\n    </Animate>\r\n  );\r\n}\r\n\r\nexport default Questions;","import CreateQuestion from \"./Questions\";\r\n\r\nexport * from \"./Questions\";\r\nexport default CreateQuestion;"],"names":["Animate","show","children","animateIn","animateOut","useState","render","setRender","useEffect","className","onAnimationEnd","ModalComponent","isOpen","content","title","footerButtons","toggleModal","size","toggle","keyboard","unmountOnClose","map","button","color","type","onClick","text","TableBody","data","columns","templates","tdata","index","columnKeys","column","accessor","tdIndex","style","width","grow","flexGrow","TableHead","Header","TableInfo","subtitle","tag","fontSize","TableLoader","TableComponent","configs","loading","isInfoAvailable","responsive","borderless","hover","createAPIUrl","endpoint","process","Form","forwardRef","ref","validationSchemas","defaultValues","onInputChange","onValidationChange","fields","id","formDefaultValues","reduce","acc","input","name","useForm","mode","formState","errors","isValid","control","getValues","handleSubmit","reset","useImperativeHandle","callback","label","inputRest","for","required","rules","field","onChange","restControls","innerRef","invalid","valid","e","options","option","value","message","CreateQuestionSchema","question","description","dueDate","language","questionEndpoints","apiUrls","getQuestions","getQuestionApi","fetch","response","json","createQuestion","createQuestionApi","method","body","JSON","stringify","deleteQuestion","deleteQuestionApi","onCreated","setIsValid","setLoading","questionId","setQuestionId","formRef","useRef","produce","createQuestionForm","draft","languages","STATIC_CONTENT","disabled","current","res","_id","console","log","DeleteQuestionAction","row","onDelete","handleDelete","Questions","questionTableConfigs","setData","refetch","setRefetch","setIsOpen","actions","prev","fetchQuestions","Modal","prefix"],"sourceRoot":""}