{"version":3,"file":"static/js/134.7a76f82e.chunk.js","mappings":"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","sources":["components/TableComponent/components/TableBody.tsx","components/TableComponent/components/TableHead.tsx","components/TableComponent/components/TableInfo.tsx","components/TableComponent/TableComponent.tsx","apis/submissionApis.ts","configs/apiConfigs.ts","components/Modal/Modal.tsx","views/Main/Main.tsx","layouts/Logo.tsx","layouts/Sidebar.tsx","layouts/Header.tsx","layouts/FullLayout.tsx"],"sourcesContent":["import { Props } from \"../models\";\r\n\r\n// Component for rendering the table body\r\nexport const TableBody = ({ data, columns, templates }: Props) => {\r\n  return (\r\n    <tbody>\r\n      {data.map((tdata, index) => {\r\n        const columnKeys = columns.map((column) => column.accessor);\r\n\r\n        return (\r\n          <tr key={index} className=\"border-top\">\r\n            {columnKeys.map((column, tdIndex) => {\r\n\r\n              return (\r\n                <td\r\n                  key={`${tdIndex}-${column}`} className=\"align-middle\"\r\n                  style={{\r\n                    width: columns[tdIndex].width,\r\n                    ...columns[tdIndex].grow ? { flexGrow: 1 } : {},\r\n                  }}>\r\n                  {\r\n                    // Render the cell content or template,Even empty, if it is available in the columns list\r\n                    (tdata[column] || templates?.[column]) ? (\r\n                      templates?.[column]?.({ ...tdata, index }) || tdata[column]\r\n                    ) : null\r\n                  }\r\n                </td>\r\n              )\r\n            })}\r\n          </tr>\r\n        )\r\n      })}\r\n    </tbody>\r\n  )\r\n}\r\n","import { Column } from \"../models\"\r\n\r\n\r\n// Component for rendering the table head\r\nexport const TableHead = ({ columns }: { columns: Column[] }) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {columns.map((column, index) => (\r\n          <th\r\n            style={{ \r\n              width: column.width || \"auto\",\r\n              ...column.grow ? { flexGrow: 1 } : {},\r\n            }}\r\n            key={`${index}-${column.accessor}`}\r\n            className=\"border-0 text-uppercase font-medium\">\r\n            {column.Header}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  )\r\n}","import { CardSubtitle, CardTitle } from \"reactstrap\"\r\nimport { Info } from \"../models\"\r\n\r\nexport const TableInfo = ({ title, subtitle }: Info) => {\r\n  return (\r\n    <>\r\n      {title && <CardTitle tag=\"h5\">{title}</CardTitle>}\r\n      {\r\n        subtitle && (\r\n          <CardSubtitle className=\"mb-2 text-muted\" style={{fontSize : '0.9rem'}} tag=\"p\">{subtitle}</CardSubtitle>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}","import { Card, CardBody, Spinner, Table } from \"reactstrap\";\r\nimport { TableBody, TableHead, TableInfo } from \"./components\";\r\nimport { Props } from \"./models\";\r\n\r\nconst TableLoader = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <Spinner color=\"secondary\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const TableComponent = ({ columns, data, templates, configs, loading }: Props) => {\r\n  const isInfoAvailable = configs?.title || configs?.subtitle;\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <TableInfo title={configs?.title || \"\"} subtitle={configs?.subtitle || \"\"} />\r\n\r\n        <Table className={`no-wrap ${isInfoAvailable ? `mt-3` : `mb-0`} align-middle`} responsive borderless hover >\r\n          \r\n          {!loading ? (\r\n            <>\r\n              <TableHead columns={columns} />\r\n              <TableBody {...{ data, columns, templates, loading }} />\r\n            </>\r\n          ) : <TableLoader />}\r\n          \r\n        </Table>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import { createAPIUrl } from \"../configs/apiConfigs\";\r\nimport apiUrls from \"../configs/apiRoutes.json\";\r\n\r\nconst submissionEndpoints = apiUrls.submissions;\r\n\r\nexport const getAllSubmissions = async () => {\r\n  const getSubmissionsApi = createAPIUrl(submissionEndpoints.getSubmissions);\r\n  const response = await fetch(getSubmissionsApi);\r\n  return await response.json();\r\n}","\r\n// Function to build the API URL\r\nexport const createAPIUrl = (endpoint: string) => {\r\n  return `${process.env.REACT_APP_API_DOMAIN}${endpoint}`;\r\n}","import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { ModalProps } from \"./models\";\r\n\r\nexport const ModalComponent = ({\r\n  isOpen,\r\n  content,\r\n  title,\r\n  footerButtons,\r\n  toggleModal,\r\n  size = \"md\"\r\n}: ModalProps) => {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={isOpen} toggle={toggleModal} size={size} keyboard unmountOnClose>\r\n        {\r\n          title && (\r\n            <ModalHeader toggle={toggleModal}>{title}</ModalHeader>\r\n          )\r\n        }\r\n\r\n        <ModalBody>\r\n          {content}\r\n        </ModalBody>\r\n\r\n        {\r\n          footerButtons && (\r\n            <ModalFooter>\r\n              {\r\n                footerButtons?.map((button) => (\r\n                  <Button color={button.type} onClick={button.onClick}>\r\n                    {button.text}\r\n                  </Button>\r\n                ))\r\n              }\r\n            </ModalFooter>\r\n          )\r\n        }\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\n\r\nimport { TableComponent } from \"../../components/TableComponent/TableComponent\";\r\nimport { getAllSubmissions } from \"../../apis/submissionApis\";\r\nimport tableConfigs from \"../../data/submissionTableConfigs.json\";\r\nimport { ModalComponent } from \"../../components/Modal/Modal\";\r\nimport { SubmissionRecord } from \"./models\";\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nconst CodeSnippet = ({ code }: { code: string }) => {\r\n\r\n  return (\r\n    <div style={{ maxHeight: \"80vh\" }}>\r\n      <SyntaxHighlighter\r\n        language=\"solidity\"\r\n        style={oneDark}\r\n        wrapLongLines\r\n      >\r\n        {code}\r\n      </SyntaxHighlighter>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Main = () => {\r\n  const [data, setData] = useState<Array<SubmissionRecord>>([]);\r\n  const [selectedRows, setSelectedRows] = useState<SubmissionRecord>();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { configs, columns } = tableConfigs;\r\n\r\n  const handleViewCode = (row: SubmissionRecord) => {\r\n    setIsModalOpen(true);\r\n    setSelectedRows(row)\r\n  };\r\n  /**\r\n   *  Templates for the submission table to attach custom components\r\n   *  */\r\n  const templates = {\r\n    code: (row: SubmissionRecord) => {\r\n      return (\r\n        <Button outline size=\"sm\" onClick={() => handleViewCode(row)}>\r\n          View\r\n        </Button>\r\n      )\r\n    },\r\n    actions: () => \"- - - - - - -\"\r\n  }\r\n\r\n  /**\r\n   * Fetch all submissions from the API\r\n   */\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    (async () => {\r\n      try {\r\n        const data = await getAllSubmissions();\r\n        setData(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ModalComponent\r\n        isOpen={isModalOpen}\r\n        size=\"lg\"\r\n        content={<CodeSnippet code={selectedRows?.code || \"\"} />}\r\n        title=\"Submitted code\"\r\n        toggleModal={() => setIsModalOpen(false)}\r\n      />\r\n\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <TableComponent\r\n            {...{\r\n              configs,\r\n              columns,\r\n              data,\r\n              templates,\r\n              loading\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport { Button, Nav, NavItem } from \"reactstrap\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst navigation = [\r\n  {\r\n    title: \"Dashboard\",\r\n    href: \"/\",\r\n    icon: \"bi bi-bar-chart-steps\",\r\n  }\r\n];\r\n\r\nconst Sidebar = () => {\r\n  let location = useLocation();\r\n\r\n  const showMobilemenu = () => {\r\n    document.getElementById(\"sidebarArea\")?.classList.toggle(\"showSidebar\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"d-flex align-items-center justify-content-between\">\r\n        <Logo />\r\n        <div className=\"ms-auto d-lg-none\">\r\n          <Button\r\n            close\r\n            size=\"sm\"\r\n            onClick={() => showMobilemenu()}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"\">\r\n        <Nav vertical className=\"sidebarNav\">\r\n          {navigation.map((navi, index) => (\r\n            <NavItem key={index} className=\"sidenav-bg\">\r\n              <Link\r\n                to={navi.href}\r\n                className={\r\n                  location.pathname === navi.href\r\n                    ? \"text-secondary nav-link py-3\"\r\n                    : \"nav-link text-secondary py-3\"\r\n                }\r\n              >\r\n                <i className={navi.icon}></i>\r\n                <span className=\"ms-3 d-inline-block\">{navi.title}</span>\r\n              </Link>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport user1 from \"../assets/images/users/user5.jpg\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const Handletoggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  \r\n  const showMobilemenu = () => {\r\n    document.getElementById(\"sidebarArea\")?.classList.toggle(\"showSidebar\");\r\n  };\r\n  return (\r\n    <Navbar color=\"dark\" dark expand=\"md\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <Button\r\n          color=\"dark\"\r\n          className=\"d-md-none\"\r\n          onClick={() => showMobilemenu()}\r\n        >\r\n          <i className=\"bi bi-list\"></i>\r\n        </Button>\r\n      </div>\r\n      <div className=\"hstack gap-2\">\r\n        <Button\r\n          color=\"dark\"\r\n          size=\"sm\"\r\n          className=\"d-sm-block d-md-none\"\r\n          onClick={Handletoggle}\r\n        >\r\n          {isOpen ? (\r\n            <i className=\"bi bi-x\"></i>\r\n          ) : (\r\n            <i className=\"bi bi-three-dots-vertical\"></i>\r\n          )}\r\n        </Button>\r\n      </div>\r\n      \r\n      <Collapse navbar isOpen={isOpen} className=\"justify-content-end\">\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n          <DropdownToggle color=\"dark\">\r\n            <img\r\n              src={user1}\r\n              alt=\"profile\"\r\n              className=\"rounded-circle\"\r\n              width=\"30\"\r\n            ></img>\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>Logout</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Container } from \"reactstrap\";\r\n\r\nimport Main from \"../views/Main/Main\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\nimport Header from \"./Header\";\r\n\r\nconst FullLayout = () => {\r\n  return (\r\n    <main>\r\n      <div className=\"pageWrapper d-lg-flex\">\r\n        {/********Sidebar**********/}\r\n        <aside className=\"sidebarArea shadow\" id=\"sidebarArea\">\r\n          <Sidebar />\r\n        </aside>\r\n        {/********Content Area**********/}\r\n        <div className=\"contentArea\">\r\n          {/********header**********/}\r\n          <Header />\r\n          {/********Middle Content**********/}\r\n          <Container className=\"p-4 wrapper\" fluid>\r\n            <Main />\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default FullLayout;\r\n"],"names":["TableBody","data","columns","templates","map","tdata","index","columnKeys","column","accessor","className","tdIndex","style","width","grow","flexGrow","TableHead","Header","TableInfo","title","subtitle","tag","fontSize","TableLoader","color","TableComponent","configs","loading","isInfoAvailable","responsive","borderless","hover","submissionEndpoints","apiUrls","getAllSubmissions","endpoint","getSubmissions","getSubmissionsApi","process","fetch","response","json","ModalComponent","isOpen","content","footerButtons","toggleModal","size","toggle","keyboard","unmountOnClose","button","type","onClick","text","CodeSnippet","code","maxHeight","language","oneDark","wrapLongLines","useState","setData","selectedRows","setSelectedRows","isModalOpen","setIsModalOpen","setLoading","tableConfigs","row","outline","handleViewCode","actions","useEffect","console","log","lg","navigation","href","icon","location","useLocation","close","document","getElementById","classList","showMobilemenu","vertical","navi","to","pathname","React","setIsOpen","dropdownOpen","setDropdownOpen","dark","expand","navbar","prevState","src","user1","alt","id","fluid"],"sourceRoot":""}