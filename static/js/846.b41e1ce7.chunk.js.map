{"version":3,"file":"static/js/846.b41e1ce7.chunk.js","mappings":"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","sources":["components/Animate/Animate.tsx","components/Modal/Modal.tsx","components/Form/Form.tsx","components/TableComponent/components/TableBody.tsx","components/TableComponent/components/TableHead.tsx","components/TableComponent/components/TableInfo.tsx","components/TableComponent/TableComponent.tsx","configs/apiConfigs.ts","configs/constants.ts","apis/submissionApis.ts","views/Submissions/Actions/DeleteSubmissionAction.tsx","views/Submissions/Submissions.tsx","views/Submissions/index.ts"],"sourcesContent":["import { useEffect, useState, PropsWithChildren } from \"react\";\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  animateIn?: string;\r\n  animateOut?: string;\r\n}\r\n\r\nexport const Animate = ({ show, children, animateIn = \"fadeIn\", animateOut = \"fadeOut\" }: PropsWithChildren<Props>) => {\r\n  const [render, setRender] = useState(false);\r\n\r\n  useEffect(() => {\r\n    show && setRender(show);\r\n  }, [show]);\r\n\r\n  const handleAnimationEnd = () => {\r\n    !show && setRender(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {render && (\r\n        <div className={!show ? animateOut : animateIn} onAnimationEnd={handleAnimationEnd}>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { ModalProps } from \"./models\";\r\n\r\nexport const ModalComponent = ({\r\n  isOpen,\r\n  content,\r\n  title,\r\n  footerButtons,\r\n  toggle,\r\n  size = \"md\",\r\n  centered = false\r\n}: ModalProps) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        {...{ isOpen, toggle, size, centered }}\r\n        keyboard\r\n        unmountOnClose\r\n        >\r\n        {\r\n          title && (\r\n            <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n          )\r\n        }\r\n\r\n        <ModalBody>\r\n          {content}\r\n        </ModalBody>\r\n\r\n        {\r\n          footerButtons && (\r\n            <ModalFooter>\r\n              {\r\n                footerButtons?.map((button) => (\r\n                  <Button key={button.text} {...button}>\r\n                    {button.text}\r\n                  </Button>\r\n                ))\r\n              }\r\n            </ModalFooter>\r\n          )\r\n        }\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, { ChangeEvent, ForwardedRef, forwardRef, useEffect, useImperativeHandle } from \"react\"\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { FormProps, FormRef, Option } from \"./model\";\r\n\r\nexport const Form = forwardRef(({\r\n  configs,\r\n  validationSchemas,\r\n  defaultValues,\r\n  onInputChange,\r\n  onValidationChange,\r\n}: FormProps, ref: ForwardedRef<FormRef>) => {\r\n\r\n  const { fields, id } = configs;\r\n  const formDefaultValues = defaultValues || fields.reduce((acc, input) => {\r\n    acc[input.name] = \"\";\r\n    return acc;\r\n  }, {} as { [key: string]: string });\r\n\r\n  const { formState: { errors, isValid }, control, getValues, handleSubmit, reset } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: formDefaultValues\r\n  });\r\n\r\n  // Expose the events and values to the parent component\r\n  useImperativeHandle(ref, () => ({\r\n    getValues,\r\n    handleSubmit: (callback) => handleSubmit(callback)(),\r\n    reset\r\n  }), [getValues, handleSubmit]);\r\n\r\n  // Expose the validation state to the parent component\r\n  useEffect(() => {\r\n    onValidationChange?.(isValid);\r\n  }, [isValid]);\r\n\r\n  return (\r\n    <div id={id}>\r\n      {\r\n        fields.map(({ label, name, type, ...inputRest }: any) => {\r\n          return (\r\n            <FormGroup key={name}>\r\n              <Label for={name}>\r\n                {label} {\r\n                  validationSchemas[name]?.required ? (\r\n                    <span className=\"text-danger fw-bold\">*</span>\r\n                  ) : \"\"}</Label>\r\n              <Controller\r\n                name={name}\r\n                control={control}\r\n                rules={validationSchemas[name as keyof typeof validationSchemas]}\r\n                render={({ field: { ref, onChange, ...restControls } }) => {\r\n                  return (\r\n                    <Input\r\n                      id={name}\r\n                      innerRef={ref}\r\n                      type={type || \"text\"}\r\n                      invalid={!!errors[name]}\r\n                      valid={!!getValues()[name] && !errors[name]}\r\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                        onChange(e);\r\n                        onInputChange?.(e);\r\n                      }}\r\n\r\n                      {...inputRest}\r\n                      {...restControls} >\r\n\r\n                      {\r\n                        type === \"select\" ? inputRest.options?.map((option: Option) => (\r\n                          <option key={option.id} value={`${option.id}`}>{option.label}</option>\r\n                        )) : null\r\n                      }\r\n                    </Input>\r\n                  )\r\n                }}\r\n              />\r\n              <FormFeedback>\r\n                {`${errors[name]?.message}`}\r\n              </FormFeedback>\r\n            </FormGroup>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Form","import React from \"react\";\r\nimport { TableProps } from \"../models\";\r\n\r\n// Component for rendering the table body\r\nexport const TableBody = ({ data, columns, templates }: TableProps) => {\r\n  return (\r\n    <tbody>\r\n      {data.map((tdata, index) => {\r\n        const columnKeys = columns.map((column) => column.accessor);\r\n\r\n        return (\r\n          <tr key={index} className=\"border-top\">\r\n            {columnKeys.map((column, tdIndex) => {\r\n\r\n              return (\r\n                <td\r\n                  key={`${tdIndex}-${column}`} className=\"align-middle\"\r\n                  style={{\r\n                    width: columns[tdIndex].width,\r\n                    minWidth : columns[tdIndex].minWidth || \"auto\",\r\n                    maxWidth : columns[tdIndex].maxWidth || \"auto\",\r\n                    textAlign: columns[tdIndex].align || \"left\",\r\n                    ...columns[tdIndex].grow ? { flexGrow: 1 } : {},\r\n                  }}>\r\n                  {\r\n                    // Render the cell content or template,Even empty, if it is available in the columns list\r\n                    (tdata[column] || templates?.[column]) ? (\r\n                      templates?.[column]?.({ ...tdata, index }) || tdata[column]\r\n                    ) : null\r\n                  }\r\n                </td>\r\n              )\r\n            })}\r\n          </tr>\r\n        )\r\n      })}\r\n    </tbody>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Column } from \"../models\"\r\n\r\n// Component for rendering the table head\r\nexport const TableHead = ({ columns }: { columns: Column[] }) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {columns.map((column, index) => (\r\n          <th\r\n            style={{\r\n              width: column.width || \"auto\",\r\n              textAlign : column.align || \"left\",\r\n              ...column.grow ? { flexGrow: 1 } : {},\r\n            }}\r\n            key={`${index}-${column.accessor}`}\r\n            className=\"border-0 font-medium\">\r\n            {column.Header}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  )\r\n}","import React from \"react\";\r\nimport { CardSubtitle, CardTitle } from \"reactstrap\"\r\nimport { Info } from \"../models\"\r\n\r\nexport const TableInfo = ({ title, subtitle }: Info) => {\r\n  return (\r\n    <>\r\n      {title && <CardTitle tag=\"h5\">{title}</CardTitle>}\r\n      {\r\n        subtitle && (\r\n          <CardSubtitle className=\"mb-2 text-muted\" style={{fontSize : '0.9rem'}} tag=\"p\">{subtitle}</CardSubtitle>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}","import React, { ReactNode } from \"react\";\r\nimport { Card, CardBody, Spinner, Table } from \"reactstrap\";\r\nimport { TableBody, TableHead, TableInfo } from \"./components\";\r\nimport { TableProps } from \"./models\";\r\n\r\nconst TableLoader = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <Spinner color=\"secondary\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst EmptyMessage = ({ message }: { message: ReactNode }) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <h5>{message}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const TableComponent = ({ columns, data, templates, configs, loading, rowHover = true }: TableProps) => {\r\n  const isInfoAvailable = configs?.title || configs?.subtitle;\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody className=\"overflow-auto\">\r\n          <TableInfo title={configs?.title || \"\"} subtitle={configs?.subtitle || \"\"} />\r\n\r\n          <Table\r\n            className={`no-wrap ${isInfoAvailable ? `mt-3` : `mb-0`} align-middle`}\r\n            borderless\r\n            hover={rowHover} >\r\n\r\n            {!loading ? (\r\n              <>\r\n                <TableHead columns={columns} />\r\n\r\n                { // Render the table body only if the data is available\r\n                  data?.length > 0 && (\r\n                    <TableBody {...{\r\n                      data,\r\n                      columns,\r\n                      templates,\r\n                      loading\r\n                    }} />\r\n                  )\r\n                }\r\n              </>\r\n            ) : <TableLoader />}\r\n\r\n          </Table>\r\n\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {data.length === 0 && !loading && (\r\n        <EmptyMessage message={configs?.noDataMessage} />\r\n      )}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","\r\n// Function to build the API URL\r\nexport const createAPIUrl = (endpoint: string) => {\r\n  return `${process.env.REACT_APP_API_DOMAIN}${endpoint}`;\r\n}","export const ROUTE_BASENAME = '/editor-admin';\r\n\r\nexport const STATIC_CONTENT = {\r\n  all_questions : \"All Questions\",\r\n  confirm : \"Confirm\",\r\n  create_question : \"Create Question\",\r\n  create_new_question : \"Create New Question\",\r\n  no_questions : \"No Questions\",\r\n  submitted_code : \"Submitted Code\",\r\n  submission_delete_confirm : \"Are you sure you want to delete this submission?\",\r\n  question_created : \"Question created\",\r\n  question_delete_confirm : \"Are you sure you want to delete this question?\",\r\n}","import Mustache from \"mustache\";\r\n\r\nimport { createAPIUrl } from \"../configs/apiConfigs\";\r\nimport apiUrls from \"../configs/apiRoutes.json\";\r\n\r\nconst submissionEndpoints = apiUrls.submissions;\r\n\r\nexport const getAllSubmissions = async () => {\r\n  const getSubmissionsApi = createAPIUrl(submissionEndpoints.getSubmissions);\r\n  const response = await fetch(getSubmissionsApi);\r\n  return await response.json();\r\n}\r\n\r\n\r\nexport const deleteSubmission = async (id: string) => {\r\n  const deleteSubmissionApi = createAPIUrl(Mustache.render(submissionEndpoints.deleteSubmission, { id }));\r\n  const response = await fetch(deleteSubmissionApi, {\r\n    method: \"DELETE\",\r\n  });\r\n  return await response.json();\r\n}","import React from \"react\"\r\nimport { ButtonProps } from \"reactstrap\";\r\n\r\nimport { deleteSubmission } from \"apis/submissionApis\";\r\nimport { ModalComponent } from \"components/Modal\";\r\nimport { STATIC_CONTENT } from \"configs/constants\";\r\nimport { SubmissionRecord } from \"../models\";\r\n\r\ntype Props = {\r\n  row: SubmissionRecord,\r\n  onDelete: () => void\r\n}\r\n\r\nexport const DeleteSubmissionAction = ({ row, onDelete }: Props) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      setLoading(true);\r\n      row._id && await deleteSubmission(row._id);\r\n      onDelete();\r\n      setIsOpen(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const footerButtons: ButtonProps[] = [\r\n    {\r\n      text: \"Cancel\",\r\n      color: \"secondary\",\r\n      disabled: loading,\r\n      onClick: () => setIsOpen(false)\r\n    },\r\n    {\r\n      text: !loading ? \"Delete\" : \"Deleting...\",\r\n      color: \"danger\",\r\n      disabled: loading,\r\n      onClick: handleDelete\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <ModalComponent\r\n        isOpen={isOpen}\r\n        size=\"md\"\r\n        centered\r\n        title={STATIC_CONTENT.confirm}\r\n        toggle={() => setIsOpen(prev => !prev)}\r\n        content={STATIC_CONTENT.submission_delete_confirm}\r\n        footerButtons={footerButtons}\r\n      />\r\n\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n        <span className=\"text-danger delete-Icon\" onClick={() => setIsOpen(true)}>\r\n          <i className=\"bi bi-trash3-fill\"></i>\r\n        </span>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nimport { getAllSubmissions } from \"apis/submissionApis\";\r\nimport { TableComponent, ModalComponent, Animate, Column } from \"components\";\r\nimport { STATIC_CONTENT } from \"configs/constants\";\r\nimport tableConfigs from \"data/submissionTableConfigs.json\";\r\nimport { SubmissionRecord } from \"./models\";\r\nimport { DeleteSubmissionAction } from \"./Actions/DeleteSubmissionAction\";\r\n\r\nconst CodeSnippet = ({ code, language }: { code: string, language?: string }) => {\r\n\r\n  return (\r\n    <div style={{ maxHeight: \"80vh\" }}>\r\n      <SyntaxHighlighter\r\n        language={language || \"solidity\"}\r\n        style={oneDark}\r\n        wrapLongLines\r\n      >\r\n        {code}\r\n      </SyntaxHighlighter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Submissions = () => {\r\n  const [data, setData] = useState<Array<SubmissionRecord>>([]);\r\n  const [selectedRows, setSelectedRows] = useState<SubmissionRecord>();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refetch, setRefetch] = useState(false);\r\n\r\n  const { configs, columns } = tableConfigs;\r\n  \r\n  const handleViewCode = (row: SubmissionRecord) => {\r\n    setIsModalOpen(true);\r\n    setSelectedRows(row)\r\n  };\r\n  /**\r\n   *  Templates for the submission table to attach custom components\r\n   *  */\r\n  const templates = {\r\n    code: (row: SubmissionRecord) => {\r\n      return (\r\n        <Button outline size=\"sm\" onClick={() => handleViewCode(row)}>\r\n          View\r\n        </Button>\r\n      )\r\n    },\r\n    actions: (row: SubmissionRecord) => <DeleteSubmissionAction row={row} onDelete={() => setRefetch(prev => !prev)} />\r\n  }\r\n\r\n  /**\r\n   * Fetch all submissions from the API\r\n   */\r\n  useEffect(() => {\r\n    !loading && setLoading(true);\r\n\r\n    (async () => {\r\n      try {\r\n        const data = await getAllSubmissions();\r\n        setData(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [refetch]);\r\n\r\n  return (\r\n    <Animate show>\r\n      <ModalComponent\r\n        isOpen={isModalOpen}\r\n        size=\"lg\"\r\n        content={<CodeSnippet code={selectedRows?.code || \"\"} language={selectedRows?.language}  />}\r\n        title={STATIC_CONTENT.submitted_code}\r\n        toggle={() => setIsModalOpen(false)}\r\n      />\r\n\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <TableComponent\r\n            {...{\r\n              configs,\r\n              columns : columns as Column[],\r\n              data,\r\n              templates,\r\n              loading\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Animate>\r\n  );\r\n};\r\n\r\nexport default Submissions;\r\n","import Submissions from \"./Submissions\";\r\nexport * from \"./Submissions\";\r\n\r\nexport default Submissions;\r\n\r\n"],"names":["Animate","show","children","animateIn","animateOut","useState","render","setRender","useEffect","className","onAnimationEnd","ModalComponent","isOpen","content","title","footerButtons","toggle","size","centered","keyboard","unmountOnClose","map","button","text","Form","forwardRef","ref","configs","validationSchemas","defaultValues","onInputChange","onValidationChange","fields","id","formDefaultValues","reduce","acc","input","name","useForm","mode","formState","errors","isValid","control","getValues","handleSubmit","reset","useImperativeHandle","callback","label","type","inputRest","for","required","rules","field","onChange","restControls","innerRef","invalid","valid","e","options","option","value","message","TableBody","data","columns","templates","tdata","index","columnKeys","column","accessor","tdIndex","style","width","minWidth","maxWidth","textAlign","align","grow","flexGrow","TableHead","Header","TableInfo","subtitle","tag","fontSize","TableLoader","color","EmptyMessage","TableComponent","loading","rowHover","isInfoAvailable","borderless","hover","length","noDataMessage","createAPIUrl","endpoint","process","STATIC_CONTENT","all_questions","confirm","create_question","create_new_question","no_questions","submitted_code","submission_delete_confirm","question_created","question_delete_confirm","submissionEndpoints","apiUrls","getAllSubmissions","getSubmissionsApi","getSubmissions","fetch","response","json","deleteSubmission","deleteSubmissionApi","Mustache","method","DeleteSubmissionAction","row","onDelete","React","setIsOpen","setLoading","handleDelete","_id","console","log","disabled","onClick","Modal","prev","CodeSnippet","code","language","maxHeight","oneDark","wrapLongLines","Submissions","setData","selectedRows","setSelectedRows","isModalOpen","setIsModalOpen","refetch","setRefetch","tableConfigs","outline","handleViewCode","actions","lg"],"sourceRoot":""}