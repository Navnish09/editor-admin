{"version":3,"file":"static/js/690.4be9de49.chunk.js","mappings":"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","sources":["components/Animate/Animate.tsx","layouts/Logo.tsx","layouts/Sidebar.tsx","layouts/Header.tsx","layouts/FullLayout.tsx"],"sourcesContent":["import { useEffect, useState, PropsWithChildren } from \"react\";\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  animateIn?: string;\r\n  animateOut?: string;\r\n}\r\n\r\nexport const Animate = ({ show, children, animateIn = \"fadeIn\", animateOut = \"fadeOut\" }: PropsWithChildren<Props>) => {\r\n  const [render, setRender] = useState(false);\r\n\r\n  useEffect(() => {\r\n    show && setRender(show);\r\n  }, [show]);\r\n\r\n  const handleAnimationEnd = () => {\r\n    !show && setRender(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {render && (\r\n        <div className={!show ? animateOut : animateIn} onAnimationEnd={handleAnimationEnd}>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { NavLink, useLocation, useMatch, useParams } from \"react-router-dom\";\r\nimport { Button, Nav, NavItem } from \"reactstrap\";\r\nimport Logo from \"./Logo\";\r\nimport pageRoutes from \"../configs/pageRoutes.json\";\r\n\r\nconst Sidebar = () => {\r\n  const showMobilemenu = () => {\r\n    document.getElementById(\"sidebarArea\")?.classList.toggle(\"showSidebar\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"d-flex align-items-center justify-content-between\">\r\n        <Logo />\r\n        <div className=\"ms-auto d-lg-none\">\r\n          <Button\r\n            close\r\n            size=\"sm\"\r\n            onClick={() => showMobilemenu()}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"\">\r\n        <Nav vertical className=\"sidebarNav\">\r\n          {pageRoutes.map((route, index) => (\r\n            <NavItem key={index} className=\"sidenav-bg\">\r\n              <NavLink\r\n                to={route.path}\r\n                className={({ isActive }) =>\r\n                  isActive\r\n                    ? \"fw-bold text-secondary nav-link py-3\"\r\n                    : \"nav-link text-secondary py-3\"\r\n                }\r\n              >\r\n                <i className={route.icon}></i>\r\n                <span className=\"ms-3 d-inline-block\">{route.title}</span>\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const Handletoggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  \r\n  const showMobilemenu = () => {\r\n    document.getElementById(\"sidebarArea\")?.classList.toggle(\"showSidebar\");\r\n  };\r\n  return (\r\n    <Navbar color=\"dark\" dark expand=\"md\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <Button\r\n          color=\"dark\"\r\n          className=\"d-md-none\"\r\n          onClick={() => showMobilemenu()}\r\n        >\r\n          <i className=\"bi bi-list\"></i>\r\n        </Button>\r\n      </div>\r\n      <div className=\"hstack gap-2\">\r\n        <Button\r\n          color=\"dark\"\r\n          size=\"sm\"\r\n          className=\"d-sm-block d-md-none\"\r\n          onClick={Handletoggle}\r\n        >\r\n          {isOpen ? (\r\n            <i className=\"bi bi-x\"></i>\r\n          ) : (\r\n            <i className=\"bi bi-three-dots-vertical\"></i>\r\n          )}\r\n        </Button>\r\n      </div>\r\n      \r\n      <Collapse navbar isOpen={isOpen} className=\"justify-content-end\">\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n          <DropdownToggle color=\"dark\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/users/user5.jpg`}\r\n              alt=\"profile\"\r\n              className=\"rounded-circle\"\r\n              width=\"30\"\r\n            ></img>\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>Logout</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Suspense } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\nimport Header from \"./Header\";\r\nimport { Animate } from \"../components/Animate/Animate\";\r\n\r\nconst FullLayout = () => {\r\n  return (\r\n    <main>\r\n      <div className=\"pageWrapper d-lg-flex\">\r\n        {/********Sidebar**********/}\r\n        <aside className=\"sidebarArea shadow\" id=\"sidebarArea\">\r\n          <Sidebar />\r\n        </aside>\r\n        {/********Content Area**********/}\r\n        <div className=\"contentArea\">\r\n          {/********header**********/}\r\n          <Header />\r\n          {/********Middle Content**********/}\r\n          <Container className=\"py-4 px-5 wrapper\" fluid>\r\n            <Suspense fallback={null}>\r\n              <Animate show={true}>\r\n                <Outlet />\r\n              </Animate>\r\n            </Suspense>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default FullLayout;\r\n"],"names":["Animate","show","children","animateIn","animateOut","useState","render","setRender","useEffect","className","onAnimationEnd","close","size","onClick","document","getElementById","classList","toggle","showMobilemenu","vertical","pageRoutes","map","route","index","to","path","isActive","icon","title","React","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","color","dark","expand","navbar","prevState","src","process","alt","width","id","fluid","Suspense","fallback"],"sourceRoot":""}